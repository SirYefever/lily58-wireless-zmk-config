/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        vscodeFindFile: vscodeFindFile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F1 &kp BACKSPACE &tog 0>;
            label = "VSCODEFINDFILE";
        };
    };

    behaviors {
        holdLayer: holdLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC    &kp N1                    &kp N2                &kp N3                &kp N4                  &kp N5                                                          &kp N6         &kp N7                  &kp N8                &kp N9                &kp N0                            &kp BSPC
&kp TAB    &kp Q                     &kp W                 &kp E                 &kp R                   &kp T                                                           &kp Y          &kp U                   &kp I                 &kp O                 &kp P                             &kp PRINTSCREEN
&kp LSHFT  &tap_hold LEFT_CONTROL A  &tap_hold LEFT_GUI S  &tap_hold LEFT_ALT D  &tap_hold LEFT_SHIFT F  &kp G                                                           &kp H          &tap_hold LEFT_SHIFT J  &tap_hold LEFT_ALT K  &tap_hold LEFT_GUI L  &tap_hold LEFT_CONTROL SEMICOLON  &kp APOS
&kp LCTRL  &kp Z                     &kp X                 &kp C                 &kp V                   &kp B               &kp LBKT               &kp RBKT             &kp N          &kp M                   &kp COMMA             &kp DOT               &kp FSLH                          &to 5
                                                           &kp LGUI              &holdLayer 3 TAB        &holdLayer 1 SPACE  &holdLayer 2 ESCAPE    &holdLayer 4 RETURN  &kp BACKSPACE  &kp DELETE              &kp LG(SPACE)
            >;
        };

        num-sym-fun {
            bindings = <
&trans  &kp F1                          &kp F2                      &kp F3                   &kp F4                     &kp F5                                        &kp F6                    &kp F7                        &kp F8                       &kp F9                               &kp F10                               &kp F11
&trans  &kp EXCLAMATION                 &kp AT_SIGN                 &kp POUND                &kp DOLLAR                 &kp PERCENT                                   &kp CARET                 &kp AMPERSAND                 &kp ASTERISK                 &kp LEFT_PARENTHESIS                 &kp RIGHT_PARENTHESIS                 &kp F12
&trans  &tap_hold EXCLAMATION NUMBER_1  &tap_hold AT_SIGN NUMBER_2  &tap_hold HASH NUMBER_3  &tap_hold DOLLAR NUMBER_4  &tap_hold PERCENT NUMBER_5                    &tap_hold CARET NUMBER_6  &tap_hold AMPERSAND NUMBER_7  &tap_hold ASTERISK NUMBER_8  &tap_hold LEFT_PARENTHESIS NUMBER_9  &tap_hold RIGHT_PARENTHESIS NUMBER_0  &none
&trans  &none                           &none                       &none                    &none                      &none                       &none     &none   &none                     &none                         &none                        &none                                &none                                 &none
                                                                    &trans                   &none                      &trans                      &trans    &trans  &trans                    &trans                        &none
            >;
        };

        braces {
            bindings = <
&trans  &none  &none       &none     &none     &none                        &none   &none                 &none                  &none           &none            &none
&trans  &none  &none       &none     &none     &kp INSERT                   &none   &kp K_PREV            &kp K_PLAY_PAUSE       &kp K_NEXT      &none            &none
&trans  &none  &caps_word  &kp LBKT  &kp RBKT  &none                        &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none
&trans  &none  &none       &none     &none     &none       &none     &none  &none   &none                 &none                  &none           &none            &none
                           &trans    &trans    &trans      &trans    &none  &trans  &trans                &none
            >;
        };

        sym {
            bindings = <
&trans  &none     &none     &none           &none      &none                    &none            &none      &none      &none     &none         &none
&trans  &none     &none     &none           &none      &none                    &none            &none      &none      &none     &none         &none
&trans  &kp BSLH  &kp PIPE  &kp UNDERSCORE  &kp MINUS  &none                    &kp EXCLAMATION  &kp COLON  &kp EQUAL  &kp PLUS  &kp QUESTION  &none
&trans  &none     &none     &none           &none      &none   &none    &none   &none            &none      &none      &none     &none         &none
                            &trans          &trans     &trans  &none    &trans  &trans           &trans     &none
            >;
        };

        nav {
            bindings = <
&trans  &kp F1     &kp F2    &kp F3            &kp F4             &kp F5                    &kp F6    &kp F7            &kp F8             &kp F9     &kp F10   &kp F11
&trans  &none      &none     &none             &none              &none                     &kp HOME  &kp PG_DN         &kp PG_UP          &kp END    &none     &kp F12
&trans  &kp LCTRL  &kp LGUI  &kp LALT          &kp LSHFT          &none                     &kp LEFT  &kp DOWN          &kp UP             &kp RIGHT  &kp UP    &none
&trans  &none      &none     &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &none   &none     &none   &none     &kp LC(LG(LEFT))  &kp LG(LC(RIGHT))  &kp LEFT   &kp DOWN  &kp RIGHT
                             &trans            &trans             &none   &trans    &trans  &trans    &trans            &none
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                      &kp N6         &kp N7      &kp N8         &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                                       &kp Y          &kp U       &kp I          &kp O    &kp P     &kp PRINTSCREEN
&kp LSHFT  &kp A   &kp S   &kp D   &kp F   &kp G                                       &kp H          &kp J       &kp K          &kp L    &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X   &kp C   &kp V   &kp B      &kp LBKT    &kp RBKT             &kp N          &kp M       &kp COMMA      &kp DOT  &kp FSLH  &to 0
                           &kp N   &kp M   &kp SPACE  &kp I       &holdLayer 4 RETURN  &kp BACKSPACE  &kp DELETE  &kp LG(SPACE)
            >;
        };
    };
};
