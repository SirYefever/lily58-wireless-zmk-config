/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        vscodeFindFile: vscodeFindFile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F1 &kp BACKSPACE &tog 0>;
            label = "VSCODEFINDFILE";
        };
    };

    behaviors {
        holdLayer: holdLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6  &kp N7  &kp N8         &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                               &kp Y   &kp U   &kp I          &kp O    &kp P     &kp DELETE
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                               &kp H   &kp J   &kp K          &kp L    &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B      &kp LBKT      &kp RBKT   &kp N   &kp M   &kp COMMA      &kp DOT  &kp FSLH  &kp BACKSLASH
                           &kp LGUI  &kp LALT  &kp SPACE  &kp ESCAPE    &kp ENTER  &sl 1   &to 2   &kp LG(SPACE)
            >;
        };

        sym-fun-media {
            bindings = <
&to 0   &kp F1         &kp F2        &kp F3         &kp F4         &kp F5                                 &kp F6         &kp F7        &kp F8        &kp F9        &kp F10        &kp F11
&trans  &kp LS(TILDE)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &none                                  &none          &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL     &kp MINUS      &kp F12
&trans  &kp GRAVE      &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &none                                  &kt PAGE_UP    &kp LBKT      &kp RBKT      &kp LS(PLUS)  &kp LS(UNDER)  &kp K_PLAY_PAUSE
&trans  &none          &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &none   &kp INSERT    &kp PRINTSCREEN  &kp PAGE_DOWN  &kp LS(LBRC)  &kp LS(RBRC)  &kt K_PREV    &kp K_NEXT     &kp K_MUTE
                                     &trans         &trans         &trans  &trans        &tog 1           &kp HOME       &kp END       &trans
            >;
        };

        nav-fun-bt {
            bindings = <
&to 0   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                &none                    &none                    &none     &none      &none      &none      &none     &kp BACKSPACE
&trans  &none         &none         &none                       &none                    &none                    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none     &none
&trans  &kp K_REDO    &none         &kp DELETE                  &kp LC(F)                &none                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp UP    &none
&trans  &kp K_UNDO    &kp LC(X)     &tap_hold LC(INSERT) LC(C)  &tap_hold LC(INS) LC(V)  &none   &none     &none  &none     &none      &none      &kp LEFT   &kp DOWN  &kp RIGHT
                                    &trans                      &trans                   &trans  &trans    &none  &none     &none      &none
            >;
        };
    };
};
