/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        vscodeFindFile: vscodeFindFile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F1 &kp BACKSPACE &tog 0>;
            label = "VSCODEFINDFILE";
        };
    };

    behaviors {
        holdLayer: holdLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        tap_hold: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                               &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                               &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B      &kp LBKT      &kp RBKT   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp DEL
                           &kp LGUI  &kp LALT  &kp SPACE  &kp ESCAPE    &kp ENTER  &sl 1   &tog 2  &trans
            >;
        };

        layer_1 {
            bindings = <
&tog 0  &kp F1         &kp F2        &kp F3         &kp F4         &kp F5                                 &kp F6    &kp F7        &kp F8        &kp F9        &kp F10        &kp F11
&kp     &kp LS(TILDE)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp                                    &kp       &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL     &kp MINUS      &kp F12
&kp     &kp GRAVE      &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp                                    &kp       &kp LBKT      &kp RBKT      &kp LS(PLUS)  &kp LS(UNDER)  &kp PAGE_UP
&kp     &kp            &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp     &kp INSERT    &kp PRINTSCREEN  &kp       &kp LS(LBRC)  &kp LS(RBRC)  &kp RBKT      &kp            &kp PAGE_DOWN
                                     &kp            &kp            &kp     &kp           &tog 1           &kp HOME  &kp END       &kp
            >;
        };

        layer_2 {
            bindings = <
&kp  &kp         &kp        &kp         &kp        &kp              &kp       &kp        &kp        &kp        &kp       &kp
&kp  &kp         &kp        &kp         &kp        &kp              &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp       &kp
&kp  &kp K_REDO  &kp        &kp DELETE  &kp        &kp              &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp UP    &kp
&kp  &kp K_UNDO  &kp LC(X)  &kp LC(C)   &kp LC(V)  &kp  &kp    &kp  &kp       &kp        &kp        &kp LEFT   &kp DOWN  &kp RIGHT
                            &kp         &kp        &kp  &kp    &kp  &kp       &kp        &kp
            >;
        };
    };
};
